{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","resolver1","resolve","reject","addEventListener","e","button","setTimeout","resolver2","resolver3","e1","e2","promise1","Promise","promise2","promise3","createNotification","className","numberOfPromise","notification","createElement","dataset","qa","innerText","append","then","result","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAY,SAACC,EAASC,GAC1BJ,SAASK,iBAAiB,YAAa,SAACC,GACrB,IAAbA,EAAEC,QACJJ,MAIJK,WAAW,WACTJ,KACC,MAGCK,EAAY,SAACN,GACjBH,SAASK,iBAAiB,YAAa,SAACC,GACrB,IAAbA,EAAEC,QAA6B,IAAbD,EAAEC,QACtBJ,OAKAO,EAAY,SAACP,GACjBH,SAASK,iBAAiB,YAAa,SAACM,GACtCX,SAASK,iBAAiB,YAAa,SAACO,IACnB,IAAdD,EAAGJ,QAA8B,IAAdK,EAAGL,QACT,IAAdK,EAAGL,QAA8B,IAAdI,EAAGJ,SACxBJ,SAMFU,EAAW,IAAIC,QAAQZ,GACvBa,EAAW,IAAID,QAAQL,GACvBO,EAAW,IAAIF,QAAQJ,GAoB7B,SAASO,EAAmBC,EAAWC,GAC/BC,IAAAA,EAAepB,SAASqB,cAAc,OAE5CD,EAAaE,QAAQC,GAAK,eAGtBH,EAAaF,UADH,YAAdA,EAC6B,UACA,UAGzBE,EAAaI,UAAeL,GAAAA,OAAAA,EADlB,YAAdD,EAAA,wBAAA,yBAIAnB,EAAK0B,OAAOL,GA/BdP,EACGa,KAAK,SAAAC,GACJV,EAAmB,UAAW,WAE/BW,MAAM,SAAAD,GACLV,EAAmB,QAAS,WAGhCF,EACGW,KAAK,SAAAC,GACJV,EAAmB,UAAW,YAGlCD,EACGU,KAAK,SAAAC,GACJV,EAAmB,UAAW","file":"main.9271b960.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nconst resolver1 = (resolve, reject) => {\n  document.addEventListener('mousedown', (e) => {\n    if (e.button === 0) {\n      resolve();\n    }\n  });\n\n  setTimeout(() => {\n    reject();\n  }, 3000);\n};\n\nconst resolver2 = (resolve) => {\n  document.addEventListener('mousedown', (e) => {\n    if (e.button === 0 || e.button === 2) {\n      resolve();\n    }\n  });\n};\n\nconst resolver3 = (resolve) => {\n  document.addEventListener('mousedown', (e1) => {\n    document.addEventListener('mousedown', (e2) => {\n      if ((e1.button === 0 && e2.button === 2)\n      || (e2.button === 0 && e1.button === 2)) {\n        resolve();\n      }\n    });\n  });\n};\n\nconst promise1 = new Promise(resolver1);\nconst promise2 = new Promise(resolver2);\nconst promise3 = new Promise(resolver3);\n\npromise1\n  .then(result => {\n    createNotification('success', 'First');\n  })\n  .catch(result => {\n    createNotification('error', 'First');\n  });\n\npromise2\n  .then(result => {\n    createNotification('success', 'Second');\n  });\n\npromise3\n  .then(result => {\n    createNotification('success', 'Third');\n  });\n\nfunction createNotification(className, numberOfPromise) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n\n  className === 'success'\n    ? notification.className = 'success'\n    : notification.className = 'warning';\n\n  className === 'success'\n    ? notification.innerText = `${numberOfPromise} promise was resolved`\n    : notification.innerText = `${numberOfPromise} promise was rejected`;\n\n  body.append(notification);\n}\n"]}